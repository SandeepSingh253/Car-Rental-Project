/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.car_rental.Screens;

import constants.Values;
import com.mycompany.car_rental.ConnectionClass.ConnectionClass;
import static constants.Values.MANAGER_ROLE;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import models.UserModel;
//import javax.swing.JOptionPane;

/**
 *
 * @author SONY VIAO
 */
public class LoginPage extends javax.swing.JFrame implements Values{
    
    /**
     * Creates new form LoginPage
     */
    public LoginPage() {
        initComponents();
        if(numOfAdmin()>=2){
            LogInBackGroundPanel.remove(clickHereLabel);
            LogInBackGroundPanel.remove(signUpLabel);   
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LogInBackGroundPanel = new javax.swing.JPanel();
        loginLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        logInUserNameTextField = new javax.swing.JTextField();
        logInPasswordField = new javax.swing.JPasswordField();
        signUpLabel = new javax.swing.JLabel();
        clickHereLabel = new javax.swing.JLabel();
        logInButton = new javax.swing.JButton();
        invalidUserOrPassLabel = new javax.swing.JLabel();
        emptyPassLabel = new javax.swing.JLabel();
        emptyUsernameLabel = new javax.swing.JLabel();
        closeButton = new javax.swing.JButton();
        loginBackGroundIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(800, 450));
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LogInBackGroundPanel.setBackground(new java.awt.Color(255, 255, 255));
        LogInBackGroundPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        LogInBackGroundPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginLabel.setFont(new java.awt.Font("Agency FB", 3, 36)); // NOI18N
        loginLabel.setText("LogIn");
        LogInBackGroundPanel.add(loginLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 70, 50));

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        usernameLabel.setText("User Name");
        LogInBackGroundPanel.add(usernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, -1, -1));

        passwordLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        passwordLabel.setText("Password");
        LogInBackGroundPanel.add(passwordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, -1, -1));

        logInUserNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInUserNameTextFieldActionPerformed(evt);
            }
        });
        LogInBackGroundPanel.add(logInUserNameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 200, -1));

        logInPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInPasswordFieldActionPerformed(evt);
            }
        });
        LogInBackGroundPanel.add(logInPasswordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 190, 200, -1));

        signUpLabel.setBackground(new java.awt.Color(255, 255, 255));
        signUpLabel.setText("to sign up as admin.");
        LogInBackGroundPanel.add(signUpLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 330, -1, -1));

        clickHereLabel.setBackground(new java.awt.Color(255, 255, 255));
        clickHereLabel.setForeground(new java.awt.Color(51, 51, 255));
        clickHereLabel.setText("Click Here,");
        clickHereLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickHereLabelMouseClicked(evt);
            }
        });
        LogInBackGroundPanel.add(clickHereLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 330, -1, -1));

        logInButton.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        logInButton.setText("LogIn");
        logInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logInButtonActionPerformed(evt);
            }
        });
        LogInBackGroundPanel.add(logInButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 260, 70, -1));

        invalidUserOrPassLabel.setBackground(new java.awt.Color(255, 255, 255));
        invalidUserOrPassLabel.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        invalidUserOrPassLabel.setForeground(new java.awt.Color(255, 255, 255));
        invalidUserOrPassLabel.setText("Invalid username or password!");
        LogInBackGroundPanel.add(invalidUserOrPassLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, -1, -1));

        emptyPassLabel.setBackground(new java.awt.Color(255, 255, 255));
        emptyPassLabel.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        emptyPassLabel.setForeground(new java.awt.Color(255, 255, 255));
        emptyPassLabel.setText("Password Empty!");
        LogInBackGroundPanel.add(emptyPassLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, -1, -1));

        emptyUsernameLabel.setBackground(new java.awt.Color(255, 255, 255));
        emptyUsernameLabel.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        emptyUsernameLabel.setForeground(new java.awt.Color(255, 255, 255));
        emptyUsernameLabel.setText("Username Empty!");
        LogInBackGroundPanel.add(emptyUsernameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 190, -1));

        closeButton.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });
        LogInBackGroundPanel.add(closeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 70, -1));

        getContentPane().add(LogInBackGroundPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 480, 360));

        loginBackGroundIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/loginBackGround.png"))); // NOI18N
        loginBackGroundIcon.setMaximumSize(new java.awt.Dimension(800, 450));
        loginBackGroundIcon.setMinimumSize(new java.awt.Dimension(800, 450));
        loginBackGroundIcon.setPreferredSize(new java.awt.Dimension(800, 450));
        getContentPane().add(loginBackGroundIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 450));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logInUserNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInUserNameTextFieldActionPerformed
        emptyUsernameLabel.setForeground(Color.white);
        if(logInUserNameTextField.getText().isBlank()){
            emptyUsernameLabel.setForeground(Color.red);
            return;
        }
        logInPasswordField.requestFocus();
    }//GEN-LAST:event_logInUserNameTextFieldActionPerformed

    private void logInPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInPasswordFieldActionPerformed
        logInButtonActionPerformed(evt);
    }//GEN-LAST:event_logInPasswordFieldActionPerformed

    private void logInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logInButtonActionPerformed
        
        emptyPassLabel.setForeground(Color.white);
        emptyUsernameLabel.setForeground(Color.white);
        invalidUserOrPassLabel.setForeground(Color.white);
                
        if(logInUserNameTextField.getText().isBlank()){
            emptyUsernameLabel.setForeground(Color.red);
            if(logInPasswordField.getText().isBlank()){
                emptyPassLabel.setForeground(Color.red);
            }
            return;
        }
        
        if(logInPasswordField.getText().isBlank()){
            emptyPassLabel.setForeground(Color.red);
            if(logInUserNameTextField.getText().isBlank()){
                emptyUsernameLabel.setForeground(Color.red);
            }
            return;
        }
        
        String username= logInUserNameTextField.getText();
        String password= logInPasswordField.getText();
        //logInUserNameTextField.setText("");
        logInPasswordField.setText("");

        if(isValidUser(username,password)){
            
            switch (loginUser.getRole()) {
                case ADMIN_ROLE:
                    new AdminDashBoard(loginUser).setVisible(true);
                    dispose();
                    break;
                case MANAGER_ROLE:
                    new ManagerDashBoard(loginUser).setVisible(true);
                    dispose();
                    break;
                case EMPLOYEE_ROLE:
                    new EmployeeDashBoard(loginUser).setVisible(true);
                    dispose();
                    break;
                default:
                    break;
            }
            
        }else{
            invalidUserOrPassLabel.setForeground(Color.red);
        }
                
    }//GEN-LAST:event_logInButtonActionPerformed

    private void clickHereLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clickHereLabelMouseClicked
        new AdminSignUp().setVisible(true);
        dispose();
    }//GEN-LAST:event_clickHereLabelMouseClicked

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        System.exit(0); 
    }//GEN-LAST:event_closeButtonActionPerformed
    
    
    private boolean isValidUser(String username, String password) {
        if(username.equalsIgnoreCase("admin")&&password.equalsIgnoreCase("pass")){    
            loginUser=new UserModel(-1);
            loginUser.setPassword(password);
            loginUser.setUsername(username);
            loginUser.setRole(ADMIN_ROLE);
            return true;
        }
        
        final String statement = "SELECT * from users where username=? and password=?";
        PreparedStatement preparedStatement;
        try {
            preparedStatement = ConnectionClass.getInstance().connection.prepareStatement(statement);
            preparedStatement.setString(1, username);
            preparedStatement.setString(2, password);

            ResultSet resultSet = preparedStatement.executeQuery();

            while (resultSet.next()) {
                loginUser=new UserModel(Integer.parseInt(resultSet.getString("id")));
                loginUser.setRole(resultSet.getInt("role"));
                loginUser.setUsername(username);
                loginUser.setPassword(password);
                return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPage().setVisible(true);
            }
        });
    }
    
    private int numOfAdmin() {
        int count=0;
        
        final String statement = "SELECT * from users where role=?";
        try {
            PreparedStatement preparedStatement = ConnectionClass.getInstance().connection.prepareStatement(statement);
            preparedStatement.setInt(1, ADMIN_ROLE);
            ResultSet resultSet = preparedStatement.executeQuery();
            while (resultSet.next()) {
                count++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminDashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
        return count;
    }
    
    public static UserModel loginUser;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LogInBackGroundPanel;
    private javax.swing.JLabel clickHereLabel;
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel emptyPassLabel;
    private javax.swing.JLabel emptyUsernameLabel;
    private javax.swing.JLabel invalidUserOrPassLabel;
    private javax.swing.JButton logInButton;
    private javax.swing.JPasswordField logInPasswordField;
    private javax.swing.JTextField logInUserNameTextField;
    private javax.swing.JLabel loginBackGroundIcon;
    private javax.swing.JLabel loginLabel;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel signUpLabel;
    private javax.swing.JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
 
}
