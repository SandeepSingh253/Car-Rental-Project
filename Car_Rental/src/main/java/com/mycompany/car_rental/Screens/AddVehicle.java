/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.car_rental.Screens;

import com.mycompany.car_rental.ConnectionClass.ConnectionClass;
import constants.Values;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.*;
import models.VehicleModel;

/**
 *
 * @author SONY VIAO
 */
public class AddVehicle extends javax.swing.JFrame implements Values{

    private final UserModel currentUser;

    /**
     * Creates new form AddVehicle
     */
    public AddVehicle(UserModel currentUser) {
        this.currentUser=currentUser;
        initComponents();
        updateVehiclesTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPane = new javax.swing.JTabbedPane();
        removeVehiclesPanel = new javax.swing.JPanel();
        updateVOldNumberLabel1 = new javax.swing.JLabel();
        removeVNumberTF = new javax.swing.JTextField();
        removeButton = new javax.swing.JButton();
        updateVehiclesPanel = new javax.swing.JPanel();
        updateVModelLabel = new javax.swing.JLabel();
        updateVNumberLabel = new javax.swing.JLabel();
        updateVMaxCapacityLabel = new javax.swing.JLabel();
        updateVrentPDLabel = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        updateVModelTF = new javax.swing.JTextField();
        updateVNewNumberTF = new javax.swing.JTextField();
        updateVMaxCapacityTF = new javax.swing.JTextField();
        updateVrentPDTF = new javax.swing.JTextField();
        updateVOldNumberLabel = new javax.swing.JLabel();
        updateVOldNumberTF = new javax.swing.JTextField();
        addVehiclesPanel = new javax.swing.JPanel();
        addVModelLabel = new javax.swing.JLabel();
        addVNumberLabel = new javax.swing.JLabel();
        addVMaxCapacityLabel = new javax.swing.JLabel();
        addVrentPDLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        addVModelTF = new javax.swing.JTextField();
        addVNumberTF = new javax.swing.JTextField();
        addVMaxCapacityTF = new javax.swing.JTextField();
        addVrentPDTF = new javax.swing.JTextField();
        optionPanel = new javax.swing.JPanel();
        addVehiclePanelButton = new javax.swing.JButton();
        goBackButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        removeVehiclePanelButton = new javax.swing.JButton();
        updateVehiclePanelButton = new javax.swing.JButton();
        dashBackground = new javax.swing.JLabel();
        vehicleTabelScrollPane = new javax.swing.JScrollPane();
        vehiclesTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        removeVehiclesPanel.setForeground(new java.awt.Color(0, 0, 0));
        removeVehiclesPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        updateVOldNumberLabel1.setBackground(new java.awt.Color(255, 255, 255));
        updateVOldNumberLabel1.setForeground(new java.awt.Color(255, 255, 255));
        updateVOldNumberLabel1.setText("Number");
        removeVehiclesPanel.add(updateVOldNumberLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 139, -1, -1));

        removeVNumberTF.setBackground(new java.awt.Color(51, 51, 51));
        removeVNumberTF.setForeground(new java.awt.Color(255, 255, 255));
        removeVNumberTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeVNumberTFActionPerformed(evt);
            }
        });
        removeVehiclesPanel.add(removeVNumberTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 136, 180, -1));

        removeButton.setBackground(new java.awt.Color(51, 51, 51));
        removeButton.setForeground(new java.awt.Color(255, 255, 255));
        removeButton.setText("REMOVE");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        removeVehiclesPanel.add(removeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 187, -1, -1));

        tabbedPane.addTab("RV", removeVehiclesPanel);

        updateVehiclesPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        updateVModelLabel.setBackground(new java.awt.Color(51, 51, 51));
        updateVModelLabel.setForeground(new java.awt.Color(255, 255, 255));
        updateVModelLabel.setText("Model");
        updateVehiclesPanel.add(updateVModelLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 162, -1, -1));

        updateVNumberLabel.setBackground(new java.awt.Color(51, 51, 51));
        updateVNumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        updateVNumberLabel.setText("New Number");
        updateVehiclesPanel.add(updateVNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 159, -1, -1));

        updateVMaxCapacityLabel.setBackground(new java.awt.Color(51, 51, 51));
        updateVMaxCapacityLabel.setForeground(new java.awt.Color(255, 255, 255));
        updateVMaxCapacityLabel.setText("Max Capacity");
        updateVehiclesPanel.add(updateVMaxCapacityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 212, -1, -1));

        updateVrentPDLabel.setBackground(new java.awt.Color(51, 51, 51));
        updateVrentPDLabel.setForeground(new java.awt.Color(255, 255, 255));
        updateVrentPDLabel.setText("Rent Per Day");
        updateVehiclesPanel.add(updateVrentPDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 111, -1, -1));

        updateButton.setBackground(new java.awt.Color(51, 51, 51));
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        updateVehiclesPanel.add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 209, -1, -1));

        updateVModelTF.setBackground(new java.awt.Color(51, 51, 51));
        updateVModelTF.setForeground(new java.awt.Color(255, 255, 255));
        updateVehiclesPanel.add(updateVModelTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 159, 180, -1));

        updateVNewNumberTF.setBackground(new java.awt.Color(51, 51, 51));
        updateVNewNumberTF.setForeground(new java.awt.Color(255, 255, 255));
        updateVehiclesPanel.add(updateVNewNumberTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 159, 180, -1));

        updateVMaxCapacityTF.setBackground(new java.awt.Color(51, 51, 51));
        updateVMaxCapacityTF.setForeground(new java.awt.Color(255, 255, 255));
        updateVehiclesPanel.add(updateVMaxCapacityTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 209, 180, -1));

        updateVrentPDTF.setBackground(new java.awt.Color(51, 51, 51));
        updateVrentPDTF.setForeground(new java.awt.Color(255, 255, 255));
        updateVehiclesPanel.add(updateVrentPDTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 105, 180, -1));

        updateVOldNumberLabel.setBackground(new java.awt.Color(51, 51, 51));
        updateVOldNumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        updateVOldNumberLabel.setText("Number");
        updateVehiclesPanel.add(updateVOldNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 111, -1, -1));

        updateVOldNumberTF.setBackground(new java.awt.Color(51, 51, 51));
        updateVOldNumberTF.setForeground(new java.awt.Color(255, 255, 255));
        updateVOldNumberTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateVOldNumberTFActionPerformed(evt);
            }
        });
        updateVehiclesPanel.add(updateVOldNumberTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 108, 180, -1));

        tabbedPane.addTab("UV", updateVehiclesPanel);

        addVehiclesPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addVModelLabel.setBackground(new java.awt.Color(51, 51, 51));
        addVModelLabel.setForeground(new java.awt.Color(255, 255, 255));
        addVModelLabel.setText("Model");
        addVehiclesPanel.add(addVModelLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 105, -1, -1));

        addVNumberLabel.setBackground(new java.awt.Color(51, 51, 51));
        addVNumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        addVNumberLabel.setText("Number");
        addVehiclesPanel.add(addVNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 156, -1, -1));

        addVMaxCapacityLabel.setBackground(new java.awt.Color(51, 51, 51));
        addVMaxCapacityLabel.setForeground(new java.awt.Color(255, 255, 255));
        addVMaxCapacityLabel.setText("Max Capacity");
        addVehiclesPanel.add(addVMaxCapacityLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 209, -1, -1));

        addVrentPDLabel.setBackground(new java.awt.Color(51, 51, 51));
        addVrentPDLabel.setForeground(new java.awt.Color(255, 255, 255));
        addVrentPDLabel.setText("Rent Per Day");
        addVehiclesPanel.add(addVrentPDLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 108, -1, -1));

        addButton.setBackground(new java.awt.Color(51, 51, 51));
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        addVehiclesPanel.add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 206, -1, -1));

        addVModelTF.setBackground(new java.awt.Color(51, 51, 51));
        addVModelTF.setForeground(new java.awt.Color(255, 255, 255));
        addVehiclesPanel.add(addVModelTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 105, 180, -1));

        addVNumberTF.setBackground(new java.awt.Color(51, 51, 51));
        addVNumberTF.setForeground(new java.awt.Color(255, 255, 255));
        addVehiclesPanel.add(addVNumberTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(117, 156, 180, -1));

        addVMaxCapacityTF.setBackground(new java.awt.Color(51, 51, 51));
        addVMaxCapacityTF.setForeground(new java.awt.Color(255, 255, 255));
        addVehiclesPanel.add(addVMaxCapacityTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(118, 206, 180, -1));

        addVrentPDTF.setBackground(new java.awt.Color(51, 51, 51));
        addVrentPDTF.setForeground(new java.awt.Color(255, 255, 255));
        addVehiclesPanel.add(addVrentPDTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 105, 180, -1));

        tabbedPane.addTab("AV", addVehiclesPanel);

        getContentPane().add(tabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, -110, 640, 280));

        optionPanel.setBackground(new java.awt.Color(153, 153, 153));
        optionPanel.setPreferredSize(new java.awt.Dimension(150, 450));
        optionPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addVehiclePanelButton.setBackground(new java.awt.Color(51, 51, 51));
        addVehiclePanelButton.setForeground(new java.awt.Color(255, 255, 255));
        addVehiclePanelButton.setText("Add Vehicle");
        addVehiclePanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVehiclePanelButtonActionPerformed(evt);
            }
        });
        optionPanel.add(addVehiclePanelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 120, 22));

        goBackButton.setBackground(new java.awt.Color(51, 51, 51));
        goBackButton.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        goBackButton.setForeground(new java.awt.Color(255, 255, 255));
        goBackButton.setText("GO BACK");
        goBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackButtonActionPerformed(evt);
            }
        });
        optionPanel.add(goBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, -1, -1));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("VEHICLES");
        optionPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 150, 40));

        removeVehiclePanelButton.setBackground(new java.awt.Color(51, 51, 51));
        removeVehiclePanelButton.setForeground(new java.awt.Color(255, 255, 255));
        removeVehiclePanelButton.setText("Remove Vehicle");
        removeVehiclePanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeVehiclePanelButtonActionPerformed(evt);
            }
        });
        optionPanel.add(removeVehiclePanelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 120, 22));

        updateVehiclePanelButton.setBackground(new java.awt.Color(51, 51, 51));
        updateVehiclePanelButton.setForeground(new java.awt.Color(255, 255, 255));
        updateVehiclePanelButton.setText("Update Vehicle");
        updateVehiclePanelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateVehiclePanelButtonActionPerformed(evt);
            }
        });
        optionPanel.add(updateVehiclePanelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 120, 22));

        dashBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dashBack.jpg"))); // NOI18N
        optionPanel.add(dashBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 160, 500));

        getContentPane().add(optionPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 450));

        vehiclesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        vehicleTabelScrollPane.setViewportView(vehiclesTable);

        getContentPane().add(vehicleTabelScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 170, 640, 280));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addVehiclePanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVehiclePanelButtonActionPerformed
        
        tabbedPane.setSelectedComponent(addVehiclesPanel);
    }//GEN-LAST:event_addVehiclePanelButtonActionPerformed

    private void goBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackButtonActionPerformed
        if(currentUser.getRole()==ADMIN_ROLE){
            new AdminDashBoard(currentUser).setVisible(true);   
        }else if(currentUser.getRole()==MANAGER_ROLE){
            new ManagerDashBoard(currentUser).setVisible(true);   
        }
        
        dispose();   
    }//GEN-LAST:event_goBackButtonActionPerformed

    private void removeVehiclePanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeVehiclePanelButtonActionPerformed
        tabbedPane.setSelectedComponent(removeVehiclesPanel);
    }//GEN-LAST:event_removeVehiclePanelButtonActionPerformed

    private void updateVehiclePanelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateVehiclePanelButtonActionPerformed
        tabbedPane.setSelectedComponent(updateVehiclesPanel);
    }//GEN-LAST:event_updateVehiclePanelButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        if(updateVModelTF.getText().isBlank() || updateVNewNumberTF.getText().isBlank() || updateVOldNumberTF.getText().isBlank() || updateVMaxCapacityTF.getText().isBlank() || updateVrentPDTF.getText().isBlank()){
            JOptionPane.showMessageDialog(null, "Text Field Empty");
            return;
        }
        
        
        VehicleModel vehicle=vehicleExist(updateVOldNumberTF.getText());
        if(vehicle==null){
            JOptionPane.showMessageDialog(null, "No Such Vehicle Exist");
            return;
        }
        VehicleModel updatedVehicle=vehicle;
        
        updatedVehicle.setIsRented(vehicle.isRented());
        updatedVehicle.setModel(updateVModelTF.getText());
        updatedVehicle.setNumber(updateVNewNumberTF.getText());
        updatedVehicle.setRentPerDay(Integer.parseInt(updateVrentPDTF.getText()));
        updatedVehicle.setMaxSeats(Integer.parseInt(updateVMaxCapacityTF.getText()));
        
        int answer=updateVehicle(updatedVehicle);
            
            switch (answer) {
                case NUMBER_ALREAD_IN_USE:
                    JOptionPane.showMessageDialog(null, "Number alredy used");
                    break;
                case UPDATE_SUCCESSFUL:
                    LogModel userLog=new LogModel(currentUser);
                    userLog.uploadLog("Updated Vehicle "+updateVOldNumberTF.getText()+" to "+updatedVehicle.getNumber());
                    updateVehiclesTable();
                    break;
                case UPDATE_UNSUCCESSFUL:
                    
                    break;
                default:
                    break;
            }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void updateVOldNumberTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateVOldNumberTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateVOldNumberTFActionPerformed

    private void removeVNumberTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeVNumberTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_removeVNumberTFActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        String number =removeVNumberTF.getText();
        VehicleModel vehicle=vehicleExist(number);
        if(vehicle==null){
            JOptionPane.showMessageDialog(null, "No such vehicle exist");
            return;
        }        
        
        boolean managerDeleted=deleteVehicle(vehicle.getNumber());
        
        if(managerDeleted){
            updateVehiclesTable();
            LogModel userLog=new LogModel(currentUser);
            userLog.uploadLog("Removed Vehicle Number= "+vehicle.getNumber()+" Model= "+vehicle.getModel());
            JOptionPane.showMessageDialog(null, "Vehicle deleted");
        }else{
            JOptionPane.showMessageDialog(null, "Vehicle not deleted");
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        VehicleModel vehicle=new VehicleModel();
        
        if(addVModelTF.getText().isBlank() || addVNumberTF.getText().isBlank() || addVMaxCapacityTF.getText().isBlank() || addVrentPDTF.getText().isBlank()){
            JOptionPane.showMessageDialog(null, "Text Field Empty");
            return;
        }
        
        vehicle.setIsRented(NOT_RENTED);
        vehicle.setMaxSeats(Integer.parseInt(addVMaxCapacityTF.getText()));
        vehicle.setModel(addVModelTF.getText());
        vehicle.setNumber(addVNumberTF.getText());
        vehicle.setRentPerDay(Integer.parseInt(addVrentPDTF.getText()));
        
        int answer = addVehicle(vehicle);
        if(answer==NUMBER_ALREAD_IN_USE){
            JOptionPane.showMessageDialog(null, "Vechicle number alredy in database");
            return;
        }
        if(answer==VEHICLE_ADDED){
            LogModel userLog=new LogModel(currentUser);
            userLog.uploadLog("Added Vehicle Number= "+vehicle.getNumber()+" model= "+vehicle.getModel());
            updateVehiclesTable();
            return;
        }
        
        if(answer==VEHICLE_NOT_ADDED){
            
        }
        
        
    }//GEN-LAST:event_addButtonActionPerformed
    
    private void updateVehiclesTable(){
    
        final String statement = "SELECT * from vehicles";
        try {
            PreparedStatement preparedStatement = ConnectionClass.getInstance().connection.prepareStatement(statement);

            ResultSet resultSet = preparedStatement.executeQuery();
            
            final String[] headerName = {"ID","Model", "Number","Max Seats","Rent/Day","On Rent"};
            DefaultTableModel model = new DefaultTableModel(null, headerName);
            vehiclesTable.setModel(model);
            Object[] row = new Object[6];

            while (resultSet.next()) {
                row[0] = resultSet.getString("id");
                row[1] = resultSet.getString("model");
                row[2] = resultSet.getString("number");
                row[3] = resultSet.getInt("max_seats");
                row[4] = resultSet.getInt("rent_per_day");
                row[5] = resultSet.getInt("is_rented");
                model.addRow(row);
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminDashBoard.class.getName()).log(Level.SEVERE, null, ex);
        }
 
    }  
    
    private int addVehicle(VehicleModel vehicle){
        
        final String searchStatement = "SELECT * from vehicles where number=?";
            
            try {
                PreparedStatement searchPreparedStatement = ConnectionClass.getInstance().connection.prepareStatement(searchStatement);
                searchPreparedStatement.setString(1, vehicle.getNumber());
                
                ResultSet searhResultSet = searchPreparedStatement.executeQuery();
                
                while (searhResultSet.next()) {
                    return NUMBER_ALREAD_IN_USE;
                }
                
                final String insertStatement = "INSERT INTO vehicles(model, number, max_seats, rent_per_day, is_rented) values(?,?,?,?,?)";
                PreparedStatement preparedStatement = ConnectionClass.getInstance().connection.prepareStatement(insertStatement);
                preparedStatement.setString(1, vehicle.getModel());
                preparedStatement.setString(2, vehicle.getNumber());
                preparedStatement.setInt(3, vehicle.getMaxSeats());
                preparedStatement.setInt(4, vehicle.getRentPerDay());
                preparedStatement.setInt(5, vehicle.isRented());

                final int isAdded = preparedStatement.executeUpdate();

                if (isAdded > 0) {
                    return VEHICLE_ADDED;
                }
            } catch (SQLException ex) {
                System.out.println("error in " + AdminSignUp.class.getName() + " = " + ex);
            }
        return VEHICLE_NOT_ADDED;
    }
    
    private VehicleModel vehicleExist(String number) {
        try {
            final String searchStatement = "SELECT * from vehicles where number=?";
            PreparedStatement searchPreparedStatement = ConnectionClass.getInstance().connection.prepareStatement(searchStatement);
            searchPreparedStatement.setString(1, number);
            ResultSet searhResultSet = searchPreparedStatement.executeQuery();

            while (searhResultSet.next()) {
                VehicleModel vehicle=new VehicleModel(Integer.parseInt(searhResultSet.getString("id")));
                vehicle.setModel(searhResultSet.getString("model"));
                vehicle.setNumber(searhResultSet.getString("number"));
                vehicle.setRentPerDay(searhResultSet.getInt("rent_per_day"));
                vehicle.setMaxSeats(searhResultSet.getInt("max_seats"));
                vehicle.setIsRented(searhResultSet.getInt("is_rented"));
                return vehicle;
            }
        } catch (SQLException ex) {
                System.out.println("error in " + AddVehicle.class.getName() + " = " + ex);
        }
        return null;
    }
    
    private boolean deleteVehicle(String number){
        
        final String statement = "delete from vehicles where `number`=?";
        try {
            PreparedStatement preparedStatement = ConnectionClass.getInstance().connection.prepareStatement(statement);
            preparedStatement.setString(1, number);
            int f=preparedStatement.executeUpdate();
            
            // f>0 means account deleted, f<=0 means not deleted
            return f>0;
        } catch (SQLException ex) {
                System.out.println("error in " + AddVehicle.class.getName() + " = " + ex);
        }
        return false;
    }
    
    private int updateVehicle(VehicleModel vehicle){
        
        final String searchStatement = "SELECT * from vehicles where number=?";
        try {
            PreparedStatement searchPreparedStatement = ConnectionClass.getInstance().connection.prepareStatement(searchStatement);
            searchPreparedStatement.setString(1, vehicle.getNumber());

            ResultSet searhResultSet = searchPreparedStatement.executeQuery();

            while (searhResultSet.next()) {                
                return NUMBER_ALREAD_IN_USE;
            }
            final String insertStatement = "update vehicles set `number`=?, `model`=?, `max_seats`=?, `rent_per_day`=?, `is_rented`=? where `id`=?";
            PreparedStatement preparedStatement = ConnectionClass.getInstance().connection.prepareStatement(insertStatement);
            preparedStatement.setString(1, vehicle.getNumber());
            preparedStatement.setString(2, vehicle.getModel());
            preparedStatement.setInt(3, vehicle.getMaxSeats());
            preparedStatement.setInt(4, vehicle.getRentPerDay());
            preparedStatement.setInt(5, vehicle.isRented());
            preparedStatement.setString(6, Integer.toString(vehicle.getID()));

            final int isAdded = preparedStatement.executeUpdate();

            if (isAdded > 0) {
                return UPDATE_SUCCESSFUL;
            } 
        } catch (SQLException ex) {
            System.out.println("error in " + AddVehicle.class.getName() + " = " + ex);
        }    
        
        return UPDATE_UNSUCCESSFUL;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel addVMaxCapacityLabel;
    private javax.swing.JTextField addVMaxCapacityTF;
    private javax.swing.JLabel addVModelLabel;
    private javax.swing.JTextField addVModelTF;
    private javax.swing.JLabel addVNumberLabel;
    private javax.swing.JTextField addVNumberTF;
    private javax.swing.JButton addVehiclePanelButton;
    private javax.swing.JPanel addVehiclesPanel;
    private javax.swing.JLabel addVrentPDLabel;
    private javax.swing.JTextField addVrentPDTF;
    private javax.swing.JLabel dashBackground;
    private javax.swing.JButton goBackButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel optionPanel;
    private javax.swing.JButton removeButton;
    private javax.swing.JTextField removeVNumberTF;
    private javax.swing.JButton removeVehiclePanelButton;
    private javax.swing.JPanel removeVehiclesPanel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel updateVMaxCapacityLabel;
    private javax.swing.JTextField updateVMaxCapacityTF;
    private javax.swing.JLabel updateVModelLabel;
    private javax.swing.JTextField updateVModelTF;
    private javax.swing.JTextField updateVNewNumberTF;
    private javax.swing.JLabel updateVNumberLabel;
    private javax.swing.JLabel updateVOldNumberLabel;
    private javax.swing.JLabel updateVOldNumberLabel1;
    private javax.swing.JTextField updateVOldNumberTF;
    private javax.swing.JButton updateVehiclePanelButton;
    private javax.swing.JPanel updateVehiclesPanel;
    private javax.swing.JLabel updateVrentPDLabel;
    private javax.swing.JTextField updateVrentPDTF;
    private javax.swing.JScrollPane vehicleTabelScrollPane;
    private javax.swing.JTable vehiclesTable;
    // End of variables declaration//GEN-END:variables
}
